[project]
requires-python = ">=3.10"

[tool.poetry]
name = "operationbot"
version = "0.41.0"
description = "Operations bot for the Zeusops discord"
authors = ["Sami Laine <sami.v.laine@gmail.com>"]
readme = "README.md"
license = "GPL-3.0-or-later"

[tool.poetry.scripts]
operationbot = "operationbot.cli:cli"

[tool.poetry.dependencies]
python = "^3.11"
# Discord bot lib
"discord.py" = ">=1.3.4,<2.0.0"
# Yaml parser
pyyaml = "*"


# Note: Linters not defined in this file but .pre-commit-config.yaml, which
# installs/manages each tool in its own isolated virtualenv

[tool.poetry.group.test.dependencies]
pytest = "7.*"
# Test coverage
pytest-cov = "4.*"
# Clearer assertion failures (colorful diff)
pytest-clarity = "1.*"
# For testing async functions
pytest-asyncio = "*"

[tool.poetry.group.docs.dependencies]
# Main documentation-as-code (HTML/PDF generator)
Sphinx = "*"
# Read the docs (pretty) theme for sphinx
sphinx-rtd-theme = "1.*"
# Markdown parser for sphinx: Sphinx uses "RST" files, this adds markdown
myst-parser = "*"
# Automatic Python module docs (javadoc-style)
sphinx-autodoc2 = "*"
# Generate Dash/Zeal "docsets" (offline dev-docs package) from HTML docs
doc2dash = "*"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

# Make isort work with Black
# Avoids conflicting imports
# As per https://pycqa.github.io/isort/docs/configuration/black_compatibility/#using-a-config-file-such-as-isortcfg
[tool.isort]
profile = "black"
multi_line_output = 3

# Avoid pointless warning about performance hit of f-string in loggers
[tool.pylint.message_control]
disable = ["logging-fstring-interpolation"]

[tool.pytest.ini_options]
addopts = """-vv \
      --doctest-modules \
      --cov=operationbot \
      --cov-report=xml:test_results/coverage.xml \
      --cov-report=html:test_results/coverage.html \
      --cov-report=term \
      --junit-xml=test_results/results.xml"""


[tool.ruff]
# Always fix what you can, without needing CLI flags
fix = true
unfixable = [
    "ERA", # do not autoremove commented out code
]
# Black compat:
line-length = 88
extend-exclude = ["docs/*"]


# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
# Add I = isort (import sorter), to remove need for isort itself
# And D = pydocstyle for docstrings
select = ["E", "F", "I", "D"]
# D400/D415 = First line (of dosctrings) should end with [.?!]
extend-ignore = ["D400", "D415"]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F", "G", "I", "N", "Q", "S", "T", "W", "ANN", "ARG", "BLE", "COM", "DJ", "DTZ", "EM", "ERA", "EXE", "FBT", "ICN", "INP", "ISC", "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TCH", "TID", "TRY", "UP", "YTT"]
# Use Google-style docstrings
pydocstyle = {convention = "google"}

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
